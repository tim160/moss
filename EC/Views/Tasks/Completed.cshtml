@using EC.Models;
@using EC.Models.ECModel;
@using EC.Models.Database;
@using EC.Localization;
@using EC.Common.Interfaces;
@using EC.Core.Common;
@{
  bool? is_cc = ViewBag.is_cc;
  if (!is_cc.HasValue)
  {
    is_cc = false;
  }
  GlobalFunctions glb = new GlobalFunctions();
  IDateTimeHelper m_DateTimeHelper = new DateTimeHelper();

  ViewBag.Title = LocalizationGetter.GetString("Mycompletedtasks", is_cc);
  Layout = "~/Views/Shared/IndexPages/LayoutCasesNewReport.cshtml";

  int user_id = (Int32)ViewBag.user_id;
  List<TaskExtended> tasks = (List<TaskExtended>)ViewBag.tasks;
  ReportModel rm = new ReportModel();

  List<report> reports = (List<report>)ViewBag.reports;
  UserModel um = new UserModel(user_id);
  int unread_tasks = ViewBag.unread_tasks;

}

<div class="blockSettings blockAllTasks">
    <div id="casesHeared">
        <div id="menu">

            <a href="/tasks/Index" class="caseesTab">@LocalizationGetter.GetString("Myactivetasks", is_cc) @if (unread_tasks > 0)
            {<span>@unread_tasks</span>}</a>
            <a href="/tasks/Completed" class="caseesTab active">@LocalizationGetter.GetString("Mycompletedtasks", is_cc)</a>
        </div>
        @*     <div class="positionActivityIcon">
                <div id="activityIcon"></div>
            </div>*@
    </div><!--casesHeared-->


    <div class="contentSettings">
        <!--START myCompletedTasks-->
        @if (tasks.Where(m => m._task.assigned_to == user_id).Count() > 0)
        {
            <div class="myCompletedTasks myTasks">
                <header>
                    <div class="menuTasks">
                        <div class="caseTasksName">
                            <span>@LocalizationGetter.GetString("Case", is_cc) > @LocalizationGetter.GetString("Taskname", is_cc)</span>
                            <span class="labelArrow">></span>
                        </div>
                        <div class="assignedMediator">@LocalizationGetter.GetString("Assignedby", is_cc)</div>
                        <div class="dueDate">
                            <span>@LocalizationGetter.GetString("Completedon", is_cc)</span>
                            <span class="labelArrow">></span>
                        </div>
                    </div>
                </header>
                <div class="contentTasks">
                    @{
                        string _classCircle, _styleCircle, _colorTextAfter, _colorTextBefore, _smallCircle, _fontName, _nameBlockShow;
                        _classCircle = "bigDot";
                        _styleCircle = "background: #3099be;";

                        //_classCircle = "notShadedCircle";
                        //_styleCircle = "border: 2px solid #d47472;";


                        _colorTextBefore = "";
                        _colorTextBefore = "colorTextGrey";


                        _colorTextAfter = "colorTextGrey";
                        _colorTextAfter = "";

                        _smallCircle = "littleDotShow";
                        _smallCircle = "littleDot";
                        _fontName = "fontSamibold";
                        _fontName = "";

                        _nameBlockShow = "blockFile";
                        _nameBlockShow = "";
                        _nameBlockShow = "blockDays";
                    }

                    <div class="blockTask taskByDate" style="display: none;">
                        @foreach (TaskExtended _task in tasks.Where(m => m._task.assigned_to == user_id).OrderBy(m => m._task.completed_on))
                        {
                            rm = new ReportModel(_task.TaskReportID);
                            _nameBlockShow = "";
                            _colorTextAfter = "colorTextGrey";
                            _colorTextBefore = "colorTextGrey";
                            _classCircle = "notShadedCircle";
                            _styleCircle = "border: 2px solid #" + @_task.TaskColorCode + ";";


                            _smallCircle = "littleDot";
                            _fontName = "";

                            <div class="contentBlockTask">
                                <div class="blockTitle">
                                    <span class="@_classCircle" style="@_styleCircle"></span>
                                    <span class="taskName @_fontName">
                                        <span class="titleTask @_colorTextBefore">
                                            @rm._report.display_name - @rm.LocationString(is_cc.Value)
                                        </span>
                                        <span class="labelArrow">></span>
                                        <a href="/newCase/Task/@_task.TaskID">
                                            <span class="text @_colorTextAfter">@_task._task.title</span>
                                        </a>
                                    </span>
                                    <span class="@_smallCircle"></span>
                                </div>
                                <div class="blockPeople">

                                    @if (@_task.TaskAssignerPhoto.Trim().Length > 0)
                                    {
                                        <img src='@Url.Content(_task.TaskAssignerPhoto)'>
                                    }
                                    else
                                    {
                                        <img src='@Url.Content("/Content/Icons/noPhoto.png")'>
                                    }
                                    <label class="name">@_task.TaskAssigner</label>
                                </div>

                                <div class="date">
                                    @if (_task._task.completed_on.HasValue)
                                    {
                                        @m_DateTimeHelper.ConvertDateToLongMonthString(_task._task.completed_on.Value)
                                    }
                                </div>
                                <div class="info @_nameBlockShow">
                                    <div class="file">
                                        <img src='@Url.Content("/Content/Icons/fileCases.png")'>
                                    </div>
                                    @if ((_task.TaskDueDate.HasValue) && (_task._task.completed_on.HasValue))
                                    {
                                        DateTime dt = _task._task.completed_on.Value;
                                        int total_days = (_task.TaskDueDate.Value - dt).Days;
                                        if ((total_days > 1))
                                        {
                                            <span class="textDays">@total_days @LocalizationGetter.GetString("dayslate", is_cc)</span>
                                        }
                                        if ((total_days == 1))
                                        {
                                            <span class="textDays">@total_days @LocalizationGetter.GetString("daylate", is_cc)</span>
                                        }
                                    }
                                </div>
                            </div>
                        }

                    </div>

                    <div class="blockTask taskByName" style="display: block;">
                        @foreach (report _report in reports.OrderBy(m => m.display_name))
                        {
                            rm = new ReportModel(_report.id);

                            List<task> _report_tasks = rm.ReportTasks(2);

                            if (_report_tasks.Where(m => m.assigned_to == user_id).Count() > 0)
                            {
                                <div class="contentBlockTasks">
                                    <div class="contentBlockTask contentMainTask">
                                        <div class="headerContentTask" style="border-left: 10px solid #@rm.ColorCode(); ">
                                            <div class="blockTitle">
                                                <span class="taskName">
                                                    <span class="titleTask">@rm._report.display_name - @rm.LocationString(is_cc.Value)</span>
                                                    <span class="labelArrow">></span>
                                                </span>
                                            </div>

                                        </div>
                                    </div><!--contentMainTask-->
                                    @foreach (task _tasks in _report_tasks.Where(m => m.assigned_to == user_id))
                                    {
                                        TaskExtended tsk = new TaskExtended(_tasks.id, user_id);

                                        _colorTextAfter = "";
                                        _colorTextBefore = "";
                                        _classCircle = "bigDot";
                                        _styleCircle = "background: #";// + @rm._color_code + ";";
                                        _colorTextAfter = "colorTextGrey";
                                        _colorTextBefore = "colorTextGrey";
                                        _classCircle = "notShadedCircle";
                                        _styleCircle = "border: 2px solid #";// + @rm._color_code + ";";


                                        if (tsk.IsRead())
                                        {
                                            _fontName = "";
                                        }

                                        <div class="contentBlockTask tasksForMain">
                                            <div class="blockTitle">
                                                <span class="@_classCircle" style="@_styleCircle@rm.ColorCode();"></span>
                                                <span class="taskName @_fontName">
                                                    <a href="/newCase/Task/@tsk.TaskID">
                                                        <span class="text @_colorTextAfter">@_tasks.title</span>
                                                    </a>
                                                </span>
                                                <span class="@_smallCircle"></span>
                                            </div>
                                            <div class="blockPeople">
                                                @if (@tsk.TaskAssignerPhoto.Trim().Length > 0)
                                                {
                                                    <img src='@Url.Content(tsk.TaskAssignerPhoto)'>
                                                }
                                                else
                                                {
                                                    <img src='@Url.Content("/Content/Icons/noPhoto.png")'>
                                                }
                                                <label class="name">@tsk.TaskAssigner</label>
                                            </div>

                                            <div class="date">
                                                @if (tsk._task.completed_on.HasValue)
                                                {
                                                    @m_DateTimeHelper.ConvertDateToLongMonthString(tsk._task.completed_on.Value)
                                                }
                                            </div>
                                            <div class="info @_nameBlockShow">
                                                <div class="file">
                                                    <img src='@Url.Content("/Content/Icons/fileCases.png")'>
                                                </div>
                                                @if ((tsk.TaskDueDate.HasValue) && (tsk._task.completed_on.HasValue))
                                                {
                                                    DateTime dt = tsk._task.completed_on.Value;
                                                    int total_days = (tsk.TaskDueDate.Value - dt).Days;
                                                    if ((total_days > 1))
                                                    {
                                                        <span class="textDays">@total_days @LocalizationGetter.GetString("dayslate", is_cc)</span>
                                                    }
                                                    if ((total_days == 1))
                                                    {
                                                        <span class="textDays">@total_days @LocalizationGetter.GetString("daylate", is_cc)</span>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    }

                                </div>
                            }
                        }
                    </div><!--END BLOCK "blockTask.taskByName"-->
                </div>

            </div>
            <!--END myCompletedTasks-->
                        }
    </div><!--contentSettings-->
</div>

<script src="~/Scripts/lib/jquery-1.10.2.min.js"></script>
<script>
        $(document).ready(function () {

            $('.menuTasks .caseTasksName span').click(function () {
                $('.blockTask.taskByDate').hide();
                $('.blockTask.taskByName').show();
                $('.myTasks header .menuTasks .dueDate .labelArrow').hide();
                $('.myTasks header .menuTasks .caseTasksName .labelArrow').show();
                $('.myTasks header .menuTasks .dueDate').css('background', '#ebf1f1');
                $('.myTasks header .menuTasks .caseTasksName').css('background', '#d6dcdc');
            });
            $('.menuTasks .dueDate span').click(function () {
                $('.blockTask.taskByDate').show();
                $('.blockTask.taskByName').hide();
                $('.myTasks header .menuTasks .dueDate .labelArrow').show();
                $('.myTasks header .menuTasks .dueDate').css('background', '#d6dcdc');
                $('.myTasks header .menuTasks .caseTasksName .labelArrow').hide();
                $('.myTasks header .menuTasks .caseTasksName').css('background', '#ebf1f1');
            });



            $('.contentMainTask').click(function () {
                $(this).parent().find('.tasksForMain').toggle();
                var element = $(this).find('.labelArrow');
                var styleElement = element.css('transform');
                if (styleElement == "matrix(-0.707107, 0.707107, -0.707107, -0.707107, 0, 0)") {

                    element.css({
                        '-ms-transform': 'rotate(45deg)',
                        '-webkit-transform': 'rotate(45deg)',
                        '-moz-transform': 'rotate(45deg)',
                        'transform': 'rotate(45deg)'
                    });
                }
                else {
                    element.css({
                        '-ms-transform': 'rotate(135deg)',
                        '-webkit-transform': 'rotate(135deg)',
                        '-moz-transform': 'rotate(135deg)',
                        'transform': 'rotate(135deg)'
                    });
                }
            });

        });

</script>