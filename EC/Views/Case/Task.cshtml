@using EC.Models;
@using EC.Models.ECModel;
@using EC.Models.Database;
@using EC.App_LocalResources;
@using EC.Constants;
@using EC.Common.Interfaces;
@using EC.Core.Common;
@{

    int report_id = (Int32)ViewBag.report_id;
    int user_id = (Int32)ViewBag.user_id;
    int task_id = (Int32)ViewBag.task_id;
    int task_status = (Int32)ViewBag.taskStatus;
    List<attachment> attachmentFiles = (List<attachment>)ViewBag.attachmentFiles;
    List<TaskExtended> tasks = (List<TaskExtended>)ViewBag.tasks;
    IDateTimeHelper m_DateTimeHelper = new DateTimeHelper();


    Layout = "~/Views/Shared/IndexPages/LayoutCasesNewReport.cshtml";

    ReportModel rm = new ReportModel(report_id);
    UserModel um = new UserModel(user_id);

    List<report_log> actions_log = rm.ReportActions(user_id, rm._report.id);

    user _assignee = new user();
    UserModel temp_user = new UserModel();
    string _temp = "";
    List<user> _mediators_whoHasAccess_toReport = rm.MediatorsWhoHasAccessToReport();

    TaskExtended _tsk = new TaskExtended(task_id, user_id);

    string _month_name = "";
    string _sender_name = "";
    string _sender_title = "";
    string _second_name = "";
    string _string_to_add = "";
    user _userActivity;
    user _second_user;
    action _action;

    string task_name = " - #" + rm._report.display_name + " - " + _tsk._task.title;
    ViewBag.Title = GlobalRes.Task + task_name;
    //    string task_comment_color = "#ffffff";

}
@{
    GlobalFunctions glb = new GlobalFunctions();
    Dictionary<int, string> month = m_DateTimeHelper.ShortMonth();

}

<body>
    @*<link type="text/css" href="~/Content/caseTasks.min.css" rel="stylesheet">*@
    <link type="text/css" href="~/Content/caseTasks.css" rel="stylesheet">
    <div class="blockContent">
        <!--leftBlockContent-->
        @Html.Partial("~/Views/PartialViews/_ReportDetailsLeft.cshtml",
                        new ViewDataDictionary { { "report_id", report_id },
                                                { "user_id", user_id },
                                                { "attachmentFiles", attachmentFiles } })
        <!--boroda-->
        <div class="rightBlockContent">
            <div id="slider"><div class="reportIconWhite"></div></div>
            <div id="casesHeared">
                <div id="menu">
                    @Html.Partial("~/Views/PartialViews/_ReportTopMenu.cshtml",
                        new ViewDataDictionary { { "report_id", report_id },
                                                { "user_id", user_id },
                                                { "selected_item", 1 } })
                </div>
                <div class="positionActivityIcon">
                    <div id="activityIcon"></div>
                    <span>@GlobalRes.Activity</span>
                </div>
            </div>

            <div style="display: table; width: 100%;">
                <div class="blockTasks">

                    <div class="headTask pageTask">
                        <div class="menuCasesBlock">
                            <div class="headerBlockTextLeft">
                                <a href="/Case/Index/@report_id" class="labelCases">@GlobalRes.Tasks</a>
                                <span class="labelArrow">></span>
                                <span class="casesDot">
                                    <span style="background: #@_tsk.TaskColorCode"></span>
                                </span>
                            </div>
                            <!--headerBlockTextLeft-->
                            <div class="headerBlockTextRight">
                                <span class="text">@_tsk._task.title</span>
                                <br />
                                @if (_tsk.TaskDueDate.HasValue)
                                {
                                    <span class="textDate">@GlobalRes.Due: @_tsk.TaskDueDateString</span>
                                }
                                else
                                {
                                    <span class="textDate">@GlobalRes.Willneverexpire</span>
                                }

                            </div>
                            <!--headerBlockTextRight-->
                            @if (task_status != 2)
                            {
                                <div class="completeTaskBtn">
                                    <input type="submit" value="complete_task" style="display: none;">
                                    <span class="contactReportBtn completeTask">@GlobalRes.TaskCompleted.ToLower()</span>
                                </div>
                            }
                            <!--completeTaskBtn-->

                        </div>
                        <!--START form-->
                        <form action="#" method="post" class="selectBlock assignedToSelect">
                            <p class="labelAssignedTo">@GlobalRes.AssignedToUpper</p>
                            <div class="dropdown subject">
                                <span class="selected">
                                    <img src='@Url.Content(_tsk.TaskAssigneePhoto)' />
                                    <span></span>
                                    <span class="textSpan">@_tsk.TaskAssignee</span>
                                    <img src='@Url.Content("~/Content/Icons/arrowSelect.png")' />
                                </span>
                                <input type="hidden" name="subject" value="general">
                                <ul style="display: none;">
                                    <li id="textAssigntaskTo">@GlobalRes.Assigntaskto.ToLower():</li>
                                    <li id="general" class="selected">
                                        <div class="blockItem">
                                            <div class="blockPhoto">
                                                <div class="photoPersonal">
                                                    @*<img src='@Url.Content("~/Content/Icons/peopleBlockSelect.png")' />*@
                                                    <img src='@Url.Content(_tsk.TaskAssigneePhoto)' />
                                                </div>
                                            </div><!--blockPhoto-->
                                            <div class="aboutMediator">
                                                <label>@_tsk.TaskAssignee</label>
                                                <label></label>
                                            </div>
                                        </div>
                                    </li>

                                    @foreach (user _user in _mediators_whoHasAccess_toReport)
                                    {
                                        if (_user.id != _tsk.TaskAssigneeID)
                                        {
                                            <li id=@_user.id>
                                                <div class="blockItem">
                                                    <div class="blockPhoto">
                                                        <div class="photoPersonal">
                                                            @if (_user.photo_path.Trim() != "")
                                                            {
                                                                <img src='@Url.Content(_user.photo_path.Trim())' />
                                                            }
                                                            else
                                                            {
                                                                <img src='@Url.Content("~/Content/Icons/noPhoto.png")' />
                                                            }
                                                        </div>
                                                    </div><!--blockPhoto-->
                                                    <div class="aboutMediator">
                                                        <label>@_user.first_nm @_user.last_nm</label>
                                                        <label>@_user.title_ds</label>
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                    }
                                </ul>

                            </div>
                        </form>



                    </div><!--headTask-->

                    <div class="blockComents">
                        <div class="blockComment" style="border-left: 10px solid #ffffff">
                            <div class="blockPhoto">
                                <div class="photoPersonal">
                                    <img src=@_tsk.TaskAssignerPhoto alt="" stone="">
                                </div>
                            </div><!--blockPhoto-->
                            <div class="contentComment">
                                <p class="headerComment">
                                    <span class="namePersone">@_tsk.TaskAssigner</span>
                                    @*<span class="dateComment">23/12/2015</span>*@
                                </p>
                                <p class="assignedTo">
                                    <span class="labelArrow"></span>
                                    <span class="labelArrow"></span>
                                    <span class="assignedToText">@_tsk._task.description</span>

                                    @{
                                        if ((ViewBag.AttachmentFilesTask != null) && ((List<attachment>)ViewBag.AttachmentFilesTask).Count() > 0)
                                        {
                                            <text>
                                                <span style="cursor: pointer;">
                                                    <a href="@ViewBag.AttachmentFilesTask[0].path_nm">
                                                        <img src="/Content/Icons/fileCases.png">
                                                    </a>
                                                </span>
                                            </text>
                                        }
                                    }

                                    <span class="assignedToName" style="float:right; color:#aeb5b7;">@m_DateTimeHelper.ConvertDateToLongMonthString(_tsk._task.created_on)</span>
                                </p>
                            </div>
                        </div>

                        @foreach (task_comment _comment in _tsk.Comments().OrderBy(x => x.created_date).ToList())
                        {

                            string task_comment_color = "#ffffff";
                            TaskCommentExtended _tce = new TaskCommentExtended(_comment.id, user_id);
                            temp_user = new UserModel(_comment.user_id);
                            if (_tce.IsRead())
                            {

                            }
                            else
                            {
                                glb.UpdateTaskCommentRead(user_id, _comment.id);
                                task_comment_color = "#b2bfc3";
                            }

                            <div class="blockComment" style="border-left: 10px solid @task_comment_color">
                                <div class="blockPhoto">
                                    <div class="photoPersonal">
                                        <img src='@Url.Content(_tce.PosterPath)' alt=@temp_user._user.last_nm stone="">
                                    </div><!--blockPhoto-->
                                </div>
                                <div class="contentComment">
                                    <p class="headerComment">
                                        <span class="namePersone">@temp_user._user.first_nm @temp_user._user.last_nm</span>
                                        <span class="dateComment">@m_DateTimeHelper.ConvertDateToLongMonthString(_comment.created_date)</span>
                                    </p>
                                    <div class="textComment">
                                        <p>@_comment.body</p>
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                    <!-- ================================================================================================================== -->
                    @if (rm._investigation_status != ECGlobalConstants.investigation_status_closed)
                    {
                        using (Html.BeginForm())
                        {
                            if (task_status != 2)
                            {
                                @Html.AntiForgeryToken()

                                @model task_comment
                                <div class="addComment">
                                    <div class="content">
                                        <div class="blockPhoto1">
                                            <div class="photoPersonal">
                                                @{temp_user = new UserModel(user_id);

                                                    _temp = "";
                                                    if (temp_user._user.photo_path.Trim().Length > 0)
                                                    {
                                                        _temp = temp_user._user.photo_path.Trim();
                                                    }
                                                }
                                                @*<img src="~/Content/Icons/people.png" />*@
                                                @if (_temp != "")
                                                {
                                                    <img src='@Url.Content(_temp)'>
                                                }
                                                else
                                                {
                                                    <img src='@Url.Content("~/Content/Icons/noPhoto.png")' />
                                                }
                                            </div>
                                            <div class="arrow"></div>
                                        </div>
                                        <div class="messageText">
                                            @Html.TextAreaFor(model => model.body, new { body_tx = "body_tx" })

                                            @Html.Hidden("task_id", task_id)
                                            @Html.Hidden("user_id", user_id)
                                        </div>
                                    </div>
                                    @*@Html.Hidden("report_id", report_id)
                                        @Html.Hidden("sender_id", user_id)
                                        @Html.Hidden("reporter_access", 0)*@
                                    <div class="newCommentBtn">
                                        <input type="submit" value="comment" style="display: none;" />
                                        <span>comment</span>
                                    </div>
                                </div><!--addComment-->
                        <!-- ================================================================================================================== -->
                                                            }
                                                        }
                                                    }
                </div><!--blockTasks-->

                <div>

                    @*<!--ADD ACTIVITY BLOCK -->
    @if ((rm._report != null) && (rm._report.id != 0))
    {
        List<user> mediators = rm.MediatorsWhoHasAccessToReport();
        <div class="blockActivity" style="width: 260px; background-color: rgb(171, 185, 187); display: none;">
            <div class="headerActivity">
                <div class="blockCaseMediators">
                    @if (mediators.Count > 0)
                    {
                        <p class="titleCaseMediators">@GlobalRes.Casemediators:</p>

                        <div class="displayMediators">
                            @foreach (user _mediator in mediators)
                            {
                                <div class="blockMediator">
                                    <div class="blockPhoto">
                                        <div class="photoPersonal">
                                            @if (_mediator.photo_path.Trim() != "")
                                            {
                                                <img src='@Url.Content(_mediator.photo_path.Trim())' />
                                            }
                                            else
                                            {
                                                <img src='@Url.Content("~/Content/Icons/noPhoto.png")' />
                                            }
                                        </div>
                                    </div>
                                    <div class="personalText">
                                        <p class="title">@_mediator.first_nm @_mediator.last_nm</p>
                                        @if (_mediator.title_ds.Trim().Length > 0)
                                        {
                                            <p class="text"> @_mediator.title_ds</p>
                                        }
                                    </div>
                                </div><!--blockMediator-->
                            }
                        </div><!--displayMediators-->
                    }
                </div><!--blockCaseMediators-->
            </div><!--headerActivity-->
            @foreach (report_log _log in actions_log)
            {
                _userActivity = um.GetById(_log.user_id);
                _month_name = glb.GetShortMonth(_log.created_dt.Month);
                _action = glb.GetActionById(_log.action_id.Value);
                _second_name = "";
                _string_to_add = "";

                if (_log.second_user_id.HasValue)
                {
                    _second_user = um.GetById(_log.second_user_id.Value);
                    _second_name = (_second_user.first_nm + " " + _second_user.last_nm).Trim();
                }

                _sender_name = "";
                _sender_title = "";

                if (_log.user_id == user_id)
                {
                    _sender_name = GlobalRes.You + ",";
                }
                else
                {
                    _sender_name = (_userActivity.first_nm + " " + _userActivity.last_nm).Trim() + ",";
                }

                if (_userActivity.role_id == 8)
                {
                    {
                        _sender_title = " (" + GlobalRes.Reporter + ")";
                        _sender_name = "";
                    }
                }
                else
                {
                    _sender_title = _userActivity.title_ds.Trim();
                }

                <div class="contentActivity">
                    <div class="contentBlockActivity">
                        <div class="blockImg">
                            <img src='@Url.Content(_action.icon_path)'>
                        </div>
                        <div class="blockInfo">
                            <span class="date">@_log.created_dt.Day.ToString() @_month_name</span>
                            <div class="topText">
                                <span class="title">
                                    <span class="reviewStage">@_action.description_en</span>
                                    @if (_second_name.Length > 0) { _second_name = ": " + _second_name; }    @_second_name
                                    @if ((_log.string_to_add != null) && (_log.string_to_add.Trim().Length > 0))
                                    {
                                        _string_to_add = ": " + _log.string_to_add;
                                    }
                                    @_string_to_add
                                </span>
                            </div>
                            <p class="text">
                                @if (_sender_name != "")
                                {
                                    <span class="personalName">@_sender_name</span>
                                    <br>
                                }
                                <span class="personalSenderTitle">@_sender_title</span>
                            </p>
                        </div>
                    </div>

                    <hr class="HrBorder">

                </div>
            }

        </div><!--blockActivity-->
    }*@

                    <!--END ADD A BLOCK-->
                    @*@Html.Partial("~/Views/PartialViews/_ReportDetailsLeft.cshtml",
                        new ViewDataDictionary { { "report_id", report_id },
                                                { "user_id", user_id },
                                                { "attachmentFiles", attachmentFiles } })*@
                </div>
                <div id="rightRight"></div>
            </div><!--rightBlockContent-->

        </div>

        @*<script src="~/Scripts/lib/jquery-1.10.2.min.js"></script>
            <script src="~/Scripts/jquery.the-modal.js"></script>*@

        <script type="text/javascript">
            $(document).ready(function () {

                var activityIconOpen = false;
                var assignedToMediator = $('.assignedToSelect .dropdown input[name=subject]').val();
                var assignedToMediatorName = $('.assignedToSelect .dropdown .textSpan').text();



                $('#activityIcon').on('click', function(){
                    if (activityIconOpen){
                        $(this).parent().css('width', '81px');
                        $('.blockActivity').css('display', 'none');
                        $('.activitySection').text('');
                        activityIconOpen = false;
                    }
                    else{
                        $(this).parent().css('width', '260px');
                        $('.blockActivity').css('display', 'table-cell');
                        $('.activitySection').text('Activity');
                        activityIconOpen = true;
                    }
                });

                //START stile for textarea
                $('textarea')
                    .focus(function () {
                        $(this).css('border', '2px solid #05b5a2');
                        $(this).attr("placeholder", "");
                        $(this).parent().parent().find('.blockPhoto').find('.arrow').css('border-right', '5px solid #05b5a2');
                    })
                    .focusout(function () {
                        $(this).css('border', '2px solid #b2bfc3');
                        $(this).attr("placeholder", "");
                        $(this).parent().parent().find('.blockPhoto').find('.arrow').css('border-right', '5px solid #b2bfc3');
                    });
                //END stile for textarea
                var textAreaMessage = $('.messageText textarea');
                $('.newCommentBtn span').click(function () {
                    if (textAreaMessage.val().trim().length > 0) {
                        $('.newCommentBtn input').click();
                    }
                });

                $('.newCommentBtn span').on('click', function () {
                    if (textAreaMessage.val().trim() == "")
                        textAreaMessage.css('border', '2px solid red');
                });

                $('.completeTask').on('click', function ()
                {
                    $.ajax({
                        method: "POST",
                        url: "/Case/CloseTask",
                        data: { task_id: @task_id, user_id: @user_id }
                    }).done(function (data) {//data from server
                       /// location.reload();
                       // redirect to tasks /newCase/Tasks/
                        //window.location.replace("/newCase/Tasks/@Html.Raw(report_id)");
                       var str = '/newCase/Tasks/' + @report_id;
                        console.log(str);
                        window.location.href = str;
                    }).fail(function (error) {
                        console.log(error);
                    });
                })

                $('.dropdown')
                       .click(
                       function () {
                           $(this).children('ul').slideToggle(150);

                           if ($(this).hasClass('open')) {
                               $(this).removeClass('open');
                               return false;
                           } else {
                               $(this).addClass('open');
                               return false;
                           }

                           return false;
                       })

                       .hover(
                       function () {
                           //$(this).find('span.selected img:first-child').attr('src', '/Content/Icons/peopleBlockSelectBlack.png');
                       },
                       function () {
                           $(this).children('ul').slideUp(150);
                           $(this).removeClass('open');

                           if ($(this).parent().find('input[name=subject]').val() != assignedToMediator){

                               $('.reassignMediators').text('Do you want to reassign task from ' +
                                                             assignedToMediatorName + ' to ' +
                                                             $('.assignedToSelect .dropdown .textSpan').text() + ' ?');

                               assignedToMediatorName = $('.assignedToSelect .dropdown .textSpan').text();
                               assignedToMediator = $('.assignedToSelect .dropdown input[name=subject]').val();
                               reassignBtnYes();
                               //$("#terms-of-service").dialog();
                               //overlay();//.modal().open();
                           }
                           // $(this).find('span.selected img:first-child').attr('src', '/Content/Icons/peopleBlockSelect.png');
                       });
                function reassignBtnYes(){
                    $.ajax({
                        method: "POST",
                        url: "/Case/ReassignTask",
                        data: { task_id: @task_id, user_id: assignedToMediator }
                    }).done(function(data) {//data from server
                        // alert(data);
                    }).fail(function(error){
                        console.log(error);
                    });
                };

                $('.dropdown ul li')
                        .click(
                        function () {
                            var sitem = $(this).find('.aboutMediator').find('label:first-child').text();
                            var sid = $(this).attr('id');
                            var photo = $(this).find('.photoPersonal img').attr('src');

                            $(this).siblings('li').removeClass('selected');
                            $(this).addClass('selected');
                            $(this).parent('ul').siblings('span.selected').find('span.textSpan').text(sitem);
                            $(this).parent('ul').siblings('input').val(sid);

                            $(this).parents('.dropdown.subject').find('.selected img:first-child').attr('src', photo);
                        });

                $('.modalWindowButton').on('click', function(){})
                function rightActivityShow() {
                    var rightBlock = $("#rightRight");
                    $(".positionActivityIcon").on('click', function () {
                        if (!rightBlock.is(':empty')) {
                            rightBlock.hide(500);
                            rightBlock.empty();
                            $('.positionActivityIcon').removeClass('active');
                        }
                        else {
                            $.ajax(
                                {
                                    method: "GET",
                                    contentType: false,
                                    processData: false,
                                    cache: false,
                                    url: "/Case/GetAjaxActivity/@Html.Raw(report_id)",
                                }
                               ).done(function (data) {//data from server
                                   rightBlock.empty();
                                   rightBlock.append(data);
                                   rightBlock.show(500);
                                   $('.positionActivityIcon').addClass('active');
                               }).fail(function (error) {
                                   console.log(error);
                               });
                        }
                    });
                }


                rightActivityShow();
            });
        </script>
</body>
