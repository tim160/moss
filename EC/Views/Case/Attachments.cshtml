@using EC.Models.Database;
@using EC.Models;
@using EC.App_LocalResources;
@using EC.Common.Interfaces;
@using EC.Core.Common;
@using EC.Constants;

@{
    int report_id = (Int32)ViewBag.report_id;
    int user_id = (Int32)ViewBag.user_id;
    List<attachment> attachmentFiles = (List<attachment>)ViewBag.attachmentFiles;
    ReportModel rm = (ReportModel)ViewBag.rm;
    Layout = "~/Views/Shared/IndexPages/LayoutCasesNewReport.cshtml";
    var dth = new DateTimeHelper();

    string popup = null;
    if (ViewBag.popup != null)
    {
        popup = ViewBag.popup;
    }
}
<div>
    <link type="text/css" href="~/Content/caseTasks.css" rel="stylesheet">
    <div class="blockContent">
        <!--leftBlockContent-->
        @Html.Partial("~/Views/PartialViews/_ReportDetailsLeft.cshtml",
                        new ViewDataDictionary { { "report_id", report_id },
                                                { "user_id", user_id },
                                                { "attachmentFiles", attachmentFiles } })

        <div class="rightBlockContent">
            <div id="slider">
                <div class="reportIconWhite">
                </div>
            </div>

            @if ((rm._investigation_status == ECGlobalConstants.investigation_status_resolution) || (rm._investigation_status == ECGlobalConstants.investigation_status_completed))
            {
                @Html.Partial("~/Views/Case/PartialView/GreenBarCaseResolutionRequest.cshtml")
            }
            <div class="firstHeader2">
                <div id="casesHeared">
                    <div id="menu">
                        @Html.Partial("~/Views/PartialViews/_ReportTopMenu.cshtml",
                        new ViewDataDictionary { { "report_id", report_id },
                                                { "user_id", user_id },
                                                { "selected_item", 4 } ,{ "popup", popup } })
                    </div>
                </div>
            </div>
            <div id="rightFirstHeader">
                <div id="icon">

                </div>
            </div>
            @*start*@
            @if (rm._investigation_status == ECGlobalConstants.investigation_status_closed)
            {
                <div class="firstHeader resolveSoledBlock">
                    <div class="caseWaitApp">@GlobalRes.CaseClosed</div>
                    <div class="positionDropDown">
                        <span class="dropDownfirstHeader flag" style="top: -19px;"></span>
                        <a href="#" class="closeCustom flag"></a>
                    </div>
                    <div class="positionActivityIcon">
                        <div id="activityIcon"></div>
                        <span>@GlobalRes.Activity</span>
                    </div>
                </div>
            }

            <div id="attachmentPage">
                @{
                    var listR = (List<company_case_routing>)ViewBag.company_case_routing;
                    var listA = (List<company_case_routing_attachments>)ViewBag.company_case_routing_attachments;
                }
                @if (listR.Any() && listA.Any())
                {
                    <div class="container">
                        <div class="someBorder">
                            <p class="fact-title">Policies</p>
                            @foreach (var type in (List<company_secondary_type>)ViewBag.report_secondary_type)
                            {
                                var exists = listR.Where(x => x.company_secondary_type_id == type.id).ToList();
                                if ((exists.Any()) && (listA.Where(x => exists.Select(z => z.id).Contains(x.company_case_routing_id)).Any()))
                                {
                                    <p>@type.secondary_type_en</p>
                                    <ul>
                                        @foreach (var route in listR.Where(x => x.company_secondary_type_id == type.id))
                                        {
                                            foreach (var file in listA.Where(x => x.company_case_routing_id == route.id))
                                            {
                                                <li>
                                                    <a href="@Url.Content(file.path_nm)" download>@file.file_nm</a>
                                                </li>
                                            }
                                    }
                                    </ul>
                                }
                            }
                        </div>
                    </div>
                }
                <div class="container">
                    @using (Html.BeginForm("Attachments", "Case", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.Hidden("report_id", report_id)
                        @Html.Hidden("mode", "upload")
                        <div class="dragAndDropContainer">
                            <div class="dottedContainer">
                                <div class="semiboldText weight18">Drag and drop files here</div>
                                <div class="secondSemiboldText">or</div>
                                <div>
                                    <div class="selectFiles">
                                        select files to upload
                                    </div>
                                    <input type="file" name="files" multiple="" style="display: none;" onchange="this.form.submit();"/>
                                </div>

                            </div>
                        </div>
                    }

                    <table>
                        <tbody>
                            @{ 
                                var users = (List<user>)ViewBag.attachmentAdvUsers;
                            }
                            @foreach (var attachment in (List<attachment>)ViewBag.attachmentAdvFiles)
                            {
                                var user = users.FirstOrDefault(x => x.id == attachment.user_id);
                                <tr>
                                    <td class="image">
                                        <img src="~/Content/Icons/attachment-icon_preview.png" />
                                    </td>
                                    <td class="customWidth" style="width: 50%">
                                        <p class="secondRow">
                                            <div class="secondRowReporter">@(user == null ? "Anonymous reporter" : (user.first_nm + " " + user.last_nm).Trim())</div>
                                            @attachment.file_nm
                                        </p>
                                    </td>
                                    <td>
                                        <p class="recipient">
                                            @if (attachment.user_id != rm._report.reporter_user_id)
                                            {
                                                <select class="attachmentFile case_select" data-id="@attachment.id">
                                                    <option @(attachment.visible_mediators_only == true ? "selected" : "") value="1">Visible to Case Administrators</option>
                                                    <option @(attachment.visible_reporter == true ? "selected" : "") value="2">Visible to Reporter & Case Administrators</option>
                                                </select>
                                            }
                                            else
                                            {
                                                <span>Uploaded by Reporter</span>
                                            }
                                        </p>
                                    </td>
                                    <td>
                                        <p class="date">
                                            @dth.ConvertDateToLongMonthString(attachment.effective_dt)
                                        </p>
                                        <p class="download">
                                            <a href="@attachment.path_nm">download</a>
                                        </p>
                                        @if (attachment.user_id == user.id)
                                        {
                                            <p class="download">
                                                @using (Html.BeginForm("AttachmentDelete", null, new { id = attachment.id, report_id }, FormMethod.Post, null))
                                                {
                                                    <button type="submit">X</button>
                                                }
                                            </p>
                                        }
                                    </td>
                                </tr>
                                }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        $('.inputBlock').on('click', function () {
            $('.inputBlock').parent().find('.inputBlock > input').prop("checked", false);
            $(this).find('input').prop("checked", true);
            $(this).parent().find('#type').val($(this).find('input').val());
        });

        $('.selectFiles').on('click', function () {
            $(this).parent().find('input').click();
        });

        if (typeof (window.FileReader) === 'undefined') {
            $('.dottedContainer .semiboldText').text('');
            $('.dottedContainer .secondSemiboldText').text('');
        }
        $(".dottedContainer").on("dragover", function (event) {
            event.preventDefault();
            event.stopPropagation();
        });

        $(".dottedContainer").on("dragleave", function (event) {
            event.preventDefault();
            event.stopPropagation();
        });

        $('.dottedContainer').on('drop', function () {
            event.preventDefault();
            event.stopPropagation();

            var data = new FormData();
            data.append('report_id', '@report_id');
            data.append('mode', 'upload');
            for (var x = 0; x < event.dataTransfer.files.length; x++) {
                data.append('files' + x, event.dataTransfer.files[x]);
            }

            $.ajax({
                type: "POST",
                url: '@Url.Action("Attachments", "Case")',
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    window.location = window.location;
                },
                error: function (xhr, status, p3, p4) {
                }
            });
        });

        $('.attachmentFile').on('change', function (e) {
            if (confirm('You are about to change visibility for the file. Are you sure?')) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AttachmentType", "Case", new { id = report_id })',
                    data: {
                        file_id: $(this).data('id'),
                        type: $(this).val()
                    },
                    success: function (result) {
                        window.location = window.location;
                    },
                    error: function (xhr, status, p3, p4) {
                    }
                });
            }
        });
    });
</script>