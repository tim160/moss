@using EC.Models;
@using EC.Models.ECModel;
@using EC.Models.Database;
@using EC.App_LocalResources;
@using EC.Constants;
@using EC.Common.Interfaces;
@using EC.Core.Common;
@{

    int report_id = (Int32)ViewBag.report_id;
    int user_id = (Int32)ViewBag.user_id;
    int task_id = (Int32)ViewBag.task_id;
    int task_status = (Int32)ViewBag.taskStatus;
    List<attachment> attachmentFiles = (List<attachment>)ViewBag.attachmentFiles;
    List<TaskExtended> tasks = (List<TaskExtended>)ViewBag.tasks;
    IDateTimeHelper m_DateTimeHelper = new DateTimeHelper();


    //Layout = "~/Views/Shared/IndexPages/LayoutCasesNewReport.cshtml";
    Layout = "~/Views/Shared/IndexPages/LayoutNewCases.cshtml";

    ReportModel rm = new ReportModel(report_id);
    UserModel um = new UserModel(user_id);

    List<report_log> actions_log = rm.ReportActions(user_id, rm._report.id);

    user _assignee = new user();
    UserModel temp_user = new UserModel();
    string _temp = "";
    List<user> _mediators_whoHasAccess_toReport = rm.MediatorsWhoHasAccessToReport();

    TaskExtended _tsk = new TaskExtended(task_id, user_id);

    string _month_name = "";
    string _sender_name = "";
    string _sender_title = "";
    string _second_name = "";
    string _string_to_add = "";
    user _userActivity;
    user _second_user;
    action _action;

    string task_name = " - #" + rm._report.display_name + " - " + _tsk._task.title;
    ViewBag.Title = GlobalRes.Task + task_name;
    //    string task_comment_color = "#ffffff";

}
@{
    GlobalFunctions glb = new GlobalFunctions();
    Dictionary<int, string> month = m_DateTimeHelper.ShortMonth();

}

@Html.Partial("~/Views/Shared/Partial/_NewCasesTopMenu.cshtml")

<div class="container mainNavigationTabs__tabContent-container ">
    <div id="mainTab-Tasks" class="mainNavigationTabs__tabContent active">
	    <div class="content-container__inner">
		    <div class="divider p-tb-10"></div><!-- /.divider -->
			    <div class="fullTaskBlock shadowLight clearfix">
				    <div class="fullTaskBlock-head clearfix">
					    <div class="breadcrumbs-fullInfo clearfix">
						    <a href="@Url.Action("Tasks", new { report_id = report_id})" class="breadcrumbs-fullInfo__tree-links">
							    Tasks
						    </a><!-- /.breadcrumbs-fullInfo__tree-links -->
						    <div class="breadcrumbs-fullInfo__links-arrow">
							    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
									    viewBox="0 0 407.436 407.436" style="enable-background:new 0 0 407.436 407.436;opacity:0.3;" xml:space="preserve">
							    <polygon points="112.814,0 91.566,21.178 273.512,203.718 91.566,386.258 112.814,407.436 315.869,203.718 "/>
							    </svg>
						    </div><!-- /.breadcrumbs-fullInfo__links-arrow -->
						    <div class="breadcrumbs-fullInfo__currentPege">
							    <div class="breadcrumbs-fullInfo__currentPegeStatus"></div><!-- /.breadcrumbs-fullInfo__currentPegeStatus -->
							    <div class="breadcrumbs-fullInfo__currentPegeContent">
								    <div class="breadcrumbs-fullInfo__currentPegeContent-MeinText" style="min-width: 140px;">
									    @_tsk._task.title
								    </div><!-- /.breadcrumbs-fullInfo__currentPegeContent-MeinText -->
								    <div class="breadcrumbs-fullInfo__currentPegeContent-timeText">
                                        @if (_tsk.TaskDueDate.HasValue)
                                        {
                                            <span class="textDate">@GlobalRes.Due: @_tsk.TaskDueDateString</span>
                                        }
                                        else
                                        {
                                            <span class="textDate">@GlobalRes.Willneverexpire</span>
                                        }
								    </div><!-- /.breadcrumbs-fullInfo__currentPegeContent-timeText -->
							    </div><!-- /.breadcrumbs-fullInfo__currentPegeContent -->
						    </div><!-- /.breadcrumbs-fullInfo__currentPege -->
                            @if (task_status != 2)
                            {
                                <a href="#" class="btn-link completeTask">Complete task</a>
                            }
					    </div><!-- /.breadcrumbs-fullInfo clearfix -->
					    <div class="taskUserMenu ">
						    <a href="#" class="taskUserMenu-topBlock ">
							    <div class="taskUserMenu-topBlock__title">@GlobalRes.AssignedToUpper:</div><!-- /.taskUserMenu-topBlock__title -->
							    <div class="taskUserMenu-topBlock__userBlock clearfix">
								    <div class="taskUserMenu-topBlock__userBlock-logo col-3">
									    <img src="@Url.Content(_tsk.TaskAssigneePhoto)" alt="" />
								    </div><!-- /.taskUserMenu-topBlock__userBlock-logo -->
								    <div class="taskUserMenu-topBlock__userBlock-name col-7">
									    @_tsk.TaskAssignee
								    </div><!-- /.taskUserMenu-topBlock__userBlock-name -->
								    <div class="taskUserMenu-topBlock__userBlock-arrow col-2">
									    <svg version="1.1" class="arrowDown" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
											    viewBox="0 0 30.727 30.727" style="enable-background:new 0 0 30.727 30.727;"
											    xml:space="preserve">
									    <g>
										    <path d="M29.994,10.183L15.363,24.812L0.733,10.184c-0.977-0.978-0.977-2.561,0-3.536c0.977-0.977,2.559-0.976,3.536,0
											    l11.095,11.093L26.461,6.647c0.977-0.976,2.559-0.976,3.535,0C30.971,7.624,30.971,9.206,29.994,10.183z"/>
									    </g>
									    </svg>

									    <svg version="1.1" class="arrowUp" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
											    viewBox="0 0 30.728 30.729" style="enable-background:new 0 0 30.728 30.729;"
											    xml:space="preserve">
									    <g>
										    <path d="M29.996,24.08c-0.977,0.978-2.561,0.978-3.535,0L15.365,12.985L4.268,24.081C3.78,24.568,3.14,24.812,2.5,24.812
											    s-1.28-0.244-1.768-0.731c-0.977-0.978-0.977-2.56,0-3.535L15.364,5.915l14.63,14.629C30.972,21.521,30.972,23.104,29.996,24.08z"
											    />
									    </g>
									    </svg>

								    </div><!-- /.taskUserMenu-topBlock__userBlock-arrow -->
							    </div><!-- /.taskUserMenu-topBlock__userBlock -->
						    </a><!-- /.taskUserMenu-topBlock -->
						    <div class="taskUserMenu-listBlock">
							    <div class="taskUserMenu-listBlock__title">
								    Assign task to:
							    </div><!-- /.taskUserMenu-listBlock__title -->
							    <div class="taskListUsers clearfix">
								    <ul class="taskListUsers__ul clearfix">
                                        @foreach (user _user in _mediators_whoHasAccess_toReport)
                                        {
                                            <li class="taskListUsers__li @(_user.id != _tsk.TaskAssigneeID ? "" : "active")">
                                                <a href="@Url.Action("ReassignTask", new { id = _tsk.TaskID, mediator_id = _user.id })" class="taskListUsers__a">
                                                    <span class="col-3 center">
                                                        <div class="profileImg">
                                                            @if (_user.photo_path.Trim() != "")
                                                            {
                                                                <img src="@Url.Content(_user.photo_path.Trim())" alt="" class="profileImg__img" />
                                                            }
                                                            else
                                                            {
                                                                <img src="@Url.Content("~/Content/Icons/noPhoto.png")" alt="" class="profileImg__img" />
                                                            }
                                                            <div class="profileImg__status "></div><!-- /.profileImg__status -->
                                                        </div><!-- /.profileImg -->
                                                    </span>
                                                    <span class="col-9">
                                                        <span class="taskListUsers__name">
                                                            @_user.first_nm @_user.last_nm
                                                        </span>
                                                        <span class="taskListUsers__post">
                                                            @_user.title_ds
                                                        </span>
                                                    </span>
                                                </a>
                                            </li><!-- /.taskListUsers__li -->
                                        }
								    </ul><!-- /.taskListUsers__ul -->
							    </div><!-- /.taskListUsers -->
							    <div class="taskUserMenu-listBlock__footer clearfix">
								    <a href="#" class="btn-link">
									    Manage team
								    </a>
							    </div><!-- /.taskUserMenu-listBlock__footer -->
						    </div><!-- /.taskUserMenu-listBlock -->
								
					    </div><!-- /.taskUserMenu -->
				    </div><!-- /.fullTaskBlock-head -->
				    <div class="fullTaskBlock-content clearfix">

                        @foreach (task_comment _comment in _tsk.Comments().OrderBy(x => x.created_date).ToList())
                        {
                            TaskCommentExtended _tce = new TaskCommentExtended(_comment.id, user_id);
                            temp_user = new UserModel(_comment.user_id);

                            <div class="row fullTaskBlock-contentRow">
                                <div class="col-1 fullTaskBlock-contentColIcon">
                                    <div class="profileImg">
                                        <img src="@Url.Content(_tce.PosterPath)" alt="" class="profileImg__img" />
                                        <div class="profileImg__status online"></div><!-- /.profileImg__status -->
                                    </div><!-- /.profileImg -->
                                </div><!-- /.col-1 -->
                                <div class="col-10 fullTaskBlock-contentColMain">
                                    <div class="messageDialogue">
                                        <div class="messageDialogue__title">
                                            @temp_user._user.first_nm @temp_user._user.last_nm
                                        </div><!-- /.messageDialogue__title -->
                                        <div class="messageDialogue__mainText">
                                            <p>
                                                @_comment.body
                                            </p>
                                        </div><!-- /.messageDialogue__mainText -->
                                        <div class="messageDialogue__additionalInfo">
                                            <div class="messageDialogue__additionalInfo-title">
                                            </div><!-- /.messageDialogue__additionalInfo-title -->
                                        </div><!-- /.messageDialogue__additionalInfo -->
                                    </div><!-- /.messageDialogue -->
                                </div><!-- /.col-10 -->
                                <div class="col-1 fullTaskBlock-contentColDate">
                                    <div class="messageDate">
                                        @m_DateTimeHelper.ConvertDateToLongMonthString(_comment.created_date)
                                    </div><!-- /.messageDate -->
                                </div><!-- /.col-1 -->
                            </div><!-- /.row -->
                        }
							
				    </div><!-- /.fullTaskBlock-content -->
                    @if (rm._investigation_status != ECGlobalConstants.investigation_status_closed)
                    {
                        using (Html.BeginForm())
                        {
                            if (task_status != 2)
                            {
                                @Html.AntiForgeryToken()

                                @model task_comment

				                <div class="fullTaskBlock-footer clearfix">
					                <div class="col-1">
						                <div class="profileImg">
							                <img src="Icons/pepperPhoto.png" alt="" class="profileImg__img" />
							                <div class="profileImg__status online"></div><!-- /.profileImg__status -->
						                </div><!-- /.profileImg -->
					                </div><!-- /.col-1 -->
					                <div class="col-11">
						                <div class="messageBlock">
                                            <textarea class="messageBlock__textArea" name="body"></textarea>

                                            @Html.Hidden("task_id", task_id)
                                            @Html.Hidden("user_id", user_id)
						                </div>
						                <div class="row clearfix">
							                <button type="submit" class="btn-linkReverse pull-right">Comment</button>
						                </div><!-- /.row -->
					                </div><!-- /.col-11 -->
				                </div><!-- /.fullTaskBlock-footer -->
                            }
                        }
                    }
			    </div><!-- /.fullTaskBlock clearfix -->
		    <div class="divider p-tb-30"></div><!-- /.divider p-tb-30 -->
	    </div><!-- /.content-container__inner -->
    </div>
</div>

<script>
    $(function () {
        listBlock('.taskUserMenu-topBlock');
        function listBlock ( listBlockSelector ){
            $ ( listBlockSelector ).click(function( event ){
                event.preventDefault();
                var $this = $( this );
                $this.addClass('active');
                $this.next('.taskUserMenu-listBlock').fadeIn();
            });
        };

        $(document).mouseup(function(e) 
        {
            var container = $(".taskUserMenu-listBlock");
            // if the target of the click isn't the container nor a descendant of the container
            if (!container.is(e.target) && container.has(e.target).length === 0) 
            {
                container.fadeOut();
                container.prev('.taskUserMenu-topBlock').removeClass('active');
            }
        });

        $('.messageBlock__textArea').focus(function () {
            var $this = $(this);
            $this.parent('.messageBlock').addClass('onFocus');
            $this.focusout(function () {
                $this.parent().removeClass("onFocus");
            });
        });

        $('.completeTask').on('click', function ()
        {
            $.ajax({
                method: "POST",
                url: "/Case/CloseTask",
                data: { task_id: @task_id, user_id: @user_id }
            }).done(function (data) {//data from server
                console.log('/newCase/Tasks/' + @report_id);
                window.location.href = '/newCase/Tasks/' + @report_id;
            }).fail(function (error) {
                console.log(error);
            });
        })
    });
</script>
