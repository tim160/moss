@using LocalizationGetter = EC.Localization.LocalizationGetter;
@model EC.Controllers.ServiceController.LoginViewModel

@{
    ViewBag.Title = "Employee Confidential";
    Layout = "~/Views/Shared/_LayoutECCOM.cshtml";
    bool is_cc = false;
    ModelState accLoked = new ModelState();
    string errorMessage = "";
    ViewData.ModelState.TryGetValue("accountIsLocked", out accLoked);
    if (accLoked != null && accLoked.Errors != null)
    {
        errorMessage = accLoked.Errors.Select(err => err.ErrorMessage).FirstOrDefault();
    }
}

@if (ViewData.ContainsKey("header_color_code") && ViewBag.header_color_code != null)
{
    <style>
    :root {
        --HeaderColor: @ViewBag.header_color_code;
        --HeaderLinksColor: @ViewBag.header_links_color_code;
    }
    </style>
}
<style>
    body .bigBlock .blockLinesItem p {
        white-space: nowrap;
    }

    .errorLogin.loginForm__input {
        border: 2px solid red;
    }
</style>

<div class="general-container login">

    <header class="header">
        <div class="top-headerBg">
            <div class="container">
                <div class="top-header">

                    <a href="http://employeeconfidential.com" class="top-header__backLink">
                        <img src="~/Content/images/svg-icons/left.svg" alt="" />
                        <span class="top-header__backLink-text">
                            EmployeeConfidential.com
                        </span>
                    </a>
                    <div class="top-header__loginBar">
                        <nav class="top-header__loginBar-nav">
                            <li class="top-header__loginBar-li">
                                <a href="@System.Configuration.ConfigurationManager.AppSettings["serviceUrl"]/Service/Report" class="top-header__loginBar-a">
                                    File a Report
                                </a>
                            </li>
                            <li class="top-header__loginBar-li">
                                <a href="@System.Configuration.ConfigurationManager.AppSettings["serviceUrl"]/Service/CheckStatus" class="top-header__loginBar-a">
                                    Check Report Status
                                </a>
                            </li>
                        </nav><!-- /.top-header__loginBar-nav -->
                    </div><!-- /.top-header__loginBar -->
                </div><!-- /.top-header -->
            </div>
        </div>

    </header><!-- /.header -->

    <main class="main">
        <section class="loginSection">
            <div class="loginSection__titleBg" style="background-color: #edf0f0">
                <div class="container loginTopSection__container">
                    <div class="loginSection__title">
                        @LocalizationGetter.GetString("ClientLoginUp", is_cc)
                    </div><!-- /.loginSection__title -->
                </div><!-- /.container -->
            </div><!-- /.loginSection__titleBg -->
            <div class="loginSection__contentBg">
                @using (Html.BeginForm("Login", "Service", new { returnUrl = Request.Params["returnUrl"] }, FormMethod.Post))
                {
                    if (this.Request.HttpMethod == "POST")
                    {
                        <input style="opacity: 0;position: absolute;">
                        <input type="password" style="opacity: 0;position: absolute;">
                    }
                    @Html.HiddenFor(x => x.HostUrl)

                    <div class="container loginSection__container">
                        <div class="loginForm">
                            <label class="loginForm__input">
                                @LocalizationGetter.GetString("Login", is_cc)
                                @Html.TextBoxFor(x => x.Login)
                            </label>
                            <label class="loginForm__input @(ViewData.ModelState.ContainsKey("PasswordError") ? "errorLogin" : "")">
                                @LocalizationGetter.GetString("Password", is_cc)
                                @Html.PasswordFor(x => x.Password, new { @class = ViewContext.ViewData.ModelState.ContainsKey("PasswordError") ? "error" : "" })
                            </label>
                            <text>
                                <p class="red">@errorMessage</p>
                            </text>
                        </div><!-- /.loginForm -->
                        <div class="loginFormLinks">
                            <a href="@Url.Action("ForgetPassword", "Service")" class="loginFormLinks__restoreLink">

                                Forgot your password?
                            </a>
                            <button type="submit" class="loginFormLinks__loginBtn btn" style="cursor: pointer;">
                                @LocalizationGetter.GetString("Login", is_cc)
                            </button>
                        </div><!-- /.loginFormLinks -->
                    </div><!-- /.container -->
                }
            </div><!-- /.loginSection__contentBg -->
        </section><!-- /.loginSection -->
    </main><!-- /.main -->
    <!-- ------------------  Footer ---------------- -->
    <footer class="footerBg">
        <div class="container">
            <div class="footer">
                <div></div>
                <div class="footer__copyright">
                    Copyright © 2019 Employee Confidential LLC. All Rights Reserved
                </div><!-- /.footer__copyright -->
                <div class="footer__navLinks">
                    <nav class="footer__navLinks-nav">
                        <li class="footer__navLinks-li">
                            <a href="http://employeeconfidential.com/PrivacyStatement.html" class="footer__navLinks-a">
                                Privacy Policy
                            </a>
                        </li><!-- /.footer__navLinks-li -->
                        <li class="footer__navLinks-li">
                            <a href="http://employeeconfidential.com/TermsOfService.html" class="footer__navLinks-a">
                                Terms of Use
                            </a>
                        </li><!-- /.footer__navLinks-li -->
                    </nav><!-- /.footer__navLinks-nav -->
                </div><!-- /.footer__navLinks -->
            </div><!-- /.footer -->
        </div><!-- /.container -->
    </footer><!-- /.footer -->

</div><!-- /.general-container -->
