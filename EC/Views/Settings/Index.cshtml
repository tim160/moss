@using EC.Models;
@using EC.Models.Database;
@using EC.Localization;
@{
    ViewBag.Title = LocalizationGetter.GetString("MySettings");
    Layout = "~/Views/Shared/IndexPages/LayoutCasesNewReport.cshtml";


    UserModel um = (UserModel)ViewBag.um;
    CompanyModel cm = new CompanyModel(um._user.company_id);
    var user_id = um.ID;
    int checkBoxActiveCases = um._user.notification_messages_actions_flag;
    int checkBoxNewReports = um._user.notification_new_reports_flag;
    string mediator_active = string.Empty;
    string adminMediator_active = string.Empty;
    string escalationMediator_active = string.Empty;
    var a = 10;
    if (um._user.role_id != 0)
    {

        switch (um._user.role_id)
        {
            case (6):
                mediator_active = "active";
                break;
            case (5):
                adminMediator_active = "active";
                break;
            case (4):
                escalationMediator_active = "active";
                break;
        }
    }
    if (um._user.photo_path == null || um._user.photo_path == String.Empty)
    {
        um._user.photo_path = "/Content/Icons/settingsPersonalNOPhoto.png";
    }
    bool? is_cc = ViewBag.is_cc;
    if (!is_cc.HasValue)
    {
        is_cc = false;
    }
    String class_ext = ViewBag.cc_extension;
}
<style>
    .error {
        border: 2px solid red !important;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.js"></script>
<a href="#alertModalFileSize" style="display: none" id="openModalForFileSize" rel="modal:open">Open Modal</a>
<div id="alertModalFileSize" class="modal case-modal">
    <p style="text-align: center">
        ERROR! The file uploaded exceeds the 4MB maximum limit.
        Please resize and re-upload.
    </p>
    <div class="case-modal__linkBlockBottom clearfix">
        <a href="#" id="ok" rel="modal:close" class="case-modal__linkBtn whiteBtn">Ok</a>
    </div><!-- /.case-modal__linkBlockBottom -->
</div>
<div class="blockSettings" ng-controller="PlatformManagerSettingsController">
    @{
        int active = 1;
    }
    @Html.Partial("~/Views/Settings/partial/casesHeader.cshtml", active)

    @using (Html.BeginForm("UpdateUser", "Settings", FormMethod.Post, new { }))
    {
        @Html.AntiForgeryToken()
        @model user
        @Html.HiddenFor(model => Model.id)
        <div class="contentSettings">
            <div class="blockPersonalPhotoSetting">
                <div class="blockPhotoSetting">
                    <img id="logoUser" class="PersonalPhotoBlock" src="@Url.Content(um._user.photo_path)" />
                    <input type="file" name="MAX_FILE_SIZE" value="9999999" data-id="settingsIndex" accept="image/*" id="_file" multiple="multiple" style="width: 1px;height: 1px;opacity: 0;" check-file-size="" />
                </div>
                <div class="blockHoverPhoto">
                    <label class="close"></label>
                    <label class="newImageBtn" make-click-hidden-input="">@LocalizationGetter.GetString("Newimage")</label>
                </div>
            </div>

            <div class="personalBlock">
                <div class="blockPersonalSettings greyBorder" ng-class="{error: val_first_nm }">
                    <p class="title">@LocalizationGetter.GetString("Firstname")</p>
                    @Html.EditorFor(model => model.first_nm, new { first_nm = "first_nm" })
                </div>
                <div class="blockPersonalSettings greyBorder" ng-class="{error: val_last_nm }">
                    <p class="title">@LocalizationGetter.GetString("Lastname")</p>
                    @Html.EditorFor(model => model.last_nm, new { last_nm = "last_nm" })
                </div>
                <div class="blockPersonalSettings greyBorder">
                    <p class="title">@LocalizationGetter.GetString("Title")</p>
                    @Html.EditorFor(model => model.title_ds, new { title_ds = "title_ds" })
                </div>
                <div class="blockPersonalSettings greyBorder">
                    <p class="title">@LocalizationGetter.GetString("Department")</p>
                    @Html.DropDownListFor(model => Model.company_department_id, new SelectList(um.listDepartments, "id", "department_nm"), new { @class = "selectStyled" })
                </div>
                <div class="blockPersonalSettings greyBorder @(ViewContext.ViewData.ModelState["company_location_id"] == null ? "" : "has-error")">
                    <p class="title">@LocalizationGetter.GetString("Location")</p>
                    @Html.DropDownListFor(model => Model.company_location_id, new SelectList(cm.Locations(um._user.company_id, 2), "id", "location_en"), "", new { @class = "selectStyled" })
                </div>
                <div class="blockPersonalSettings greyBorder"ng-class="{error: val_email }">
                    <p class="title">@LocalizationGetter.GetString("Email")</p>
                    @Html.TextBoxFor(model => model.email, new { email = "email" })
                </div>
                <div class="blockPersonalSettings greyBorder">
                    <div id="personeAgain">
                        <div class="title">@LocalizationGetter.GetString("UserPermissions")</div>
                        <div class="help" title="">
                            ?
                            <div class="hoverElement">
                                <div class="triangleHover position"></div>


                                <div class="spec position">
                                    <br />
                                    <strong>PERMISSIONS</strong><br /><br />
                                    @LocalizationGetter.GetString("AdditionalPermissionsExplanations")<br /><br /><br />
                                    <table>
                                        <tr>
                                            <td>User Permissions:</td>
                                            <td>Change Settings</td>
                                            <td>Sign-Off Case</td>
                                            <td>All Cases Access</td>
                                            <td>Case Specific Access</td>
                                        </tr>
                                        <tr>
                                            <td>Platform Manager</td>
                                            <td><div class="radio"></div></td>
                                            <td><div class="radio"></div></td>
                                            <td><div class="radio"></div></td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td>Case Investigator</td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td><div class="radio"></div> </td>
                                        </tr>
                                        <tr>
                                            <td>Case Reviewer</td>
                                            <td></td>
                                            <td><div class="radio"></div></td>
                                            <td></td>
                                            <td></td>
                                        </tr>
                                    </table>
                                    @*<ul>
                                            <li>A <strong>Case Investigator</strong> is assigned to a specific case.</li>
                                            <li>A <strong>Platform Manager</strong> is responsible for and manages the Employee Confidential system and assigns all the cases (typically an HR manager).</li>
                                            <li>A <strong>Case Reviewer</strong> handles only escalation issues and signs off on case resolutions and closure applications.</li>
                                        </ul>*@
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="rowBlock inputMediator">
                        <div class="freeBlock inputRadio mediator @mediator_active">
                            <label class="inputBlock" for="freeIncident">
                                <input id="oneIncident" type="radio" name="role_id" value="6">
                                <span class="radioTitle">@LocalizationGetter.GetString("Mediator")</span>
                            </label>
                        </div>
                        <div class="freeBlock inputRadio adminMediator adminMediator@{@class_ext} @adminMediator_active">
                            <label class="inputBlock" for="freeIncident">
                                <input id="twoIncident" type="radio" name="role_id" value="5">
                                <span class="radioTitle">@LocalizationGetter.GetString("AdminMediator")</span>
                            </label>
                        </div>
                        <div class="freeBlock inputRadio escalationMediator @escalationMediator_active">
                            @*<label class="inputBlock" for="fourIncident">*@
                            <label class="inputBlock" for="freeIncident">
                                <input id="threeIncident" type="radio" name="role_id" value="4">
                                <span class="radioTitle">@LocalizationGetter.GetString("EscalationMediator")</span>
                            </label>
                        </div>
                    </div><!--rowBlock-->
                </div>
                @if (um._user.role_id == 5 || (um._user.user_permissions_change_settings.HasValue && um._user.user_permissions_change_settings.Value == 1))
                {
                    <div class="blockPersonalSettings greyBorder">
                        <p class="title">@LocalizationGetter.GetString("ApproveCaseClosure", is_cc)</p>
                        <div class="rowBlock" id="checkBoxApproveCaseClosure">
                            <div class="freeBlock inputRadio" data-valueFlag="0">
                                <label class="inputBlock" for="thirdIncident">
                                    @Html.RadioButtonFor(model => model.user_permissions_approve_case_closure, "1", new { @readonly = "" })
                                    <span class="radioButton"></span>
                                    <span class="radioTitle">@LocalizationGetter.GetString("Yes", is_cc)</span>
                                </label>
                            </div>
                            <div class="freeBlock inputRadio" data-valueFlag="1">
                                <label class="inputBlock" for="fourIncident">
                                    @Html.RadioButtonFor(m => m.user_permissions_approve_case_closure, "2", new { @readonly = "" })
                                    <span class="radioButton"></span>
                                    <span class="radioTitle">@LocalizationGetter.GetString("No", is_cc)</span>
                                </label>
                            </div>
                        </div><!--rowBlock-->
                    </div>

                    <div class="blockPersonalSettings greyBorder">
                        <p class="title">@LocalizationGetter.GetString("ChangeSettings")</p>
                        <div class="rowBlock" id="checkBoxChangeSettings">
                            <div class="freeBlock inputRadio" data-valueFlag="0">
                                <label class="inputBlock" for="thirdIncident">
                                    @Html.RadioButtonFor(model => model.user_permissions_change_settings, "1", new { @readonly = "", disable = "" })
                                    <span class="radioButton"></span>
                                    <span class="radioTitle">@LocalizationGetter.GetString("Yes", is_cc)</span>
                                </label>
                            </div>
                            <div class="freeBlock inputRadio" data-valueFlag="1">
                                <label class="inputBlock" for="fourIncident">
                                    @Html.RadioButtonFor(m => m.user_permissions_change_settings, "2", new { @readonly = "", disable = "" })
                                    <span class="radioButton"></span>
                                    <span class="radioTitle">@LocalizationGetter.GetString("No", is_cc)</span>
                                </label>
                            </div>
                        </div><!--rowBlock-->
                    </div>
                }
                <div class="blockUpdateProfile">
                    <div class="updateProfileBtn">
                        <input style="display:none" id="submitPlatformManager" class="greenButton" type="submit" value="update" />
                        <span ng-click="update()">@LocalizationGetter.GetString("update").ToLower()</span>
                    </div>
                </div>
            </div>
        </div>
    }
    <!--</form>-->
</div>
<input type="hidden" id="urlAjaxUploadFiles" from="User" value="@Url.Action("AddLogoCompany", "Settings")" />
<input type="hidden" id="levelId" value="@Html.Raw(um._user.role_id)" />