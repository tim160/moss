@using EC.Models;
@using EC.Models.Database;
@using EC.Core.Common;
@using EC.Localization;
@{
    bool? is_cc = ViewBag.is_cc;
    if (!is_cc.HasValue)
    {
        is_cc = false;
    }
    String class_ext = "";
    if (is_cc.Value)
    {
        class_ext = "_cc";
    }
    ViewBag.active = LocalizationGetter.GetString("Activity", is_cc);
    ViewBag.Title = LocalizationGetter.GetString("Activity", is_cc);
    Layout = "~/Views/Shared/IndexPages/ReporterDashboard.cshtml";
    int user_id = (Int32)ViewBag.user_id;
    int report_id = (Int32)ViewBag.report_id;
    ReportModel rm = new ReportModel(report_id);
    UserModel um = new UserModel(user_id);
    int unread_message_number = um.Unread_Messages_Quantity(report_id, 1);
    var dth = new DateTimeHelper();
    ViewBag.active = "Attachments";

}
<!-- Modal popUp http://jquerymodal.com/ -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.css" />

<a href="#alertModalFileSize" style="display: none" id="openModalForFileSize" rel="modal:open">Open Modal</a>
<div id="alertModalFileSize" class="modal case-modal">
    <p style="text-align: center">
        @LocalizationGetter.GetString("ERRORTheFileUploaded", is_cc).
        @LocalizationGetter.GetString("PleaseResizeReUpload", is_cc).
    </p>
    <div class="case-modal__linkBlockBottom clearfix">
        <a href="#" id="ok" rel="modal:close" class="case-modal__linkBtn whiteBtn">@LocalizationGetter.GetString("Ok", is_cc)</a>
    </div><!-- /.case-modal__linkBlockBottom -->
</div>
@if ((rm._report != null) && (rm._report.id != 0))
{
    { Html.RenderPartial("~/Views/ReporterDashboard/settingMenu.cshtml", new { user_id = user_id, unread_message_number = unread_message_number, active = "Attachments" }); }

    <div id="attachmentPage" ng-controller="ReporterDashboardAttachments">
        @using (Html.BeginForm("SaveAttachments", "ReporterDashboard", FormMethod.Post, new { enctype = "multipart/form-data", id = "formDrop" }))
        {
            @Html.Hidden("report_id", report_id)
            @Html.Hidden("mode", "upload_rd")
            <div class="dragAndDropContainer">
                <div class="dottedContainer drop-box" ngf-drop ngf-select ng-model="files" ngf-drag-over-class="'dragover'" ngf-multiple="true" ngf-allow-dir="true"
                     accept="{{exts}}"
                     ngf-pattern="{{exts}}">
                    <div class="semiboldText blackText weight18">
                        @LocalizationGetter.GetString("DragDropFilesHere", is_cc)
                    </div>
                    <div class="secondSemiboldText">@LocalizationGetter.GetString("or", is_cc)</div>
                    <div class="selectFiles">
                        @LocalizationGetter.GetString("SelectFilesUpload", is_cc)
                    </div>

                </div>
            </div>
        }
        @{
            var users = (List<user>)ViewBag.attachmentAdvUsers;
        }
        @foreach (attachment attachment in ViewBag.attachmentAdvFiles)
        {
            var user = users.FirstOrDefault(x => x.id == attachment.user_id);

            <div class="files" style="width: 100%;height:50px;background-color:#e5ebeb;">
                <div class="item">
                    <div class="setAllFilesPaddingLeft">
                        <div class="imgCorner">
                            <img src="/Content/Icons/generic-file.png">
                            <div class="square"></div>
                            <div class="treangle"></div>
                        </div>
                        <div class="description">
                            @attachment.file_nm
                            <div class="download">
                                <a href="@attachment.path_nm" download="">download</a>
                            </div>
                        </div>
                    </div>
                    <div class="right setAllFilesPaddingRight">
                        <p class="date">
                            @dth.ConvertDateToLongMonthString(attachment.effective_dt)
                        </p>
                        <p class="recipient">
                            @if (attachment.user_id != rm._report.reporter_user_id)
                            {
                                @((attachment.visible_reporter == null || attachment.visible_reporter == true) ? LocalizationGetter.GetString("VisibletoReporter", is_cc) + " & " + LocalizationGetter.GetString("CaseAdministratorsUp", is_cc) : LocalizationGetter.GetString("VisibleTo", is_cc) + " " + LocalizationGetter.GetString("CaseAdministratorsUp", is_cc))
                            }
                            else
                            {
                                <span>@LocalizationGetter.GetString("UploadedByReporter", is_cc)</span>
                            }
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
}