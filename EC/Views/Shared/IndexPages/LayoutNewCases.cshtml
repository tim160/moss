@using EC.Models;
@using EC.Models.Database;
@using EC.Constants;
@using EC.Localization;
@using EC.Constants;
@using EC.Models;
@using EC.Models.ViewModels;

@{
  bool? is_cc = ViewBag.is_cc;
  if (!is_cc.HasValue)
  {
    is_cc = false;
  }
  String class_ext = ViewBag.cc_extension;

  var user_id = ViewBag.user_id;

  string hrefURL_1 = Request.Url.AbsoluteUri.ToLower();

  UserModel um = new UserModel(user_id);
  CompanyModel cm = new CompanyModel(um._user.company_id);
  ReportModel rm = new ReportModel();

  ReadStatusModel rsm = new ReadStatusModel();

  UsersUnreadEntitiesNumberViewModel userUnreadEntities = rsm.GetUserUnreadEntitiesNumbers(user_id);

  var unread_report_number = userUnreadEntities.unread_reports;

  // var unread_report_number = um.UnreadReport(0, 0).Count;
  var unread_report_number_string = "";
  string page_subtitle = "";
  if (unread_report_number > 0)
  {
    unread_report_number_string = unread_report_number.ToString();
  }

  int unread_message_number = userUnreadEntities.unread_messages;
  // int unread_message_number = um.Unread_Messages_Quantity(0, 1) + um.Unread_Messages_Quantity(0, 2) + um.Unread_Messages_Quantity(0, 3);
  var unread_message_number_string = "";
  if (unread_message_number > 0)
  {
    unread_message_number_string = unread_message_number.ToString();
  }

  int unread_task_number = userUnreadEntities.unread_tasks;
  //int unread_task_number = um.UnreadTasksQuantity(0, true, 1);
  var unread_task_number_string = "";
  if (unread_task_number > 0)
  {
    unread_task_number_string = unread_task_number.ToString();
  }

  user _user = um.GetById(user_id);
  company _company = cm.GetById(_user.company_id);

  string report_name = "Case";

  int _report_id = 0;
  int investigationstatus = 1;
  string report_color = "", report_color_code = "", report_name_code = "";
  bool is_owner = false;
  user soff = null;

  if ((ViewBag.report_id != null) && ((int)ViewBag.report_id != 0))
  {
    _report_id = (int)ViewBag.report_id;
    rm = new ReportModel(_report_id);

    report_name = rm._reportStringModel.SecondaryTypeString() + " - " + rm._reportStringModel.LocationString() + " - #" + rm._report.display_name;
    report_name_code = LocalizationGetter.GetString("Newreport") + ": #" + rm._report.display_name;
    report_color = rm._reportStringModel.ColorDescr();
    report_color_code = rm._reportStringModel.ColorCode();
    investigationstatus = rm._investigation_status;

    is_owner = rm.ReportOwners().FirstOrDefault(x => x.report_id == _report_id && x.user_id == user_id && x.status_id == 2) != null;
    soff = rm.GetSignOffMeditoar();
  }

  string[] _statuses = ECGlobalConstants.ReportFlowStatusesList;

  string same_mediator_warning = LocalizationGetter.GetString("AddFurtherNotes");
  if (rm != null && user_id == rm.Last_investigation_status_user_id())
  {
    ///     same_mediator_warning = LocalizationGetter.GetString("RecommendSecond1") + " " + LocalizationGetter.GetString("RecommendSecond2");
  }

  string normal_button_promotion = LocalizationGetter.GetString("RequestCloseCase"); //ResolveCaseUp
  string Res_or_comp = LocalizationGetter.GetString("CloseCaseUp");
  string overlay_title = LocalizationGetter.GetString("RequestCloseCase");
  string textbox_title = LocalizationGetter.GetString("Caseresolution");
  string left_button_promotion = "";
  string normal_button_value = ((int)CaseStatusConstants.CaseStatusValues.Completed).ToString();
  string left_button_value = "";// Constant.investigation_status_completed.ToString();
  List<company_outcome> company_outcomes = cm.Outcomes(_user.company_id, 2);

  if ((investigationstatus > 2 && investigationstatus < 7) || (investigationstatus == 9))
  {
    Res_or_comp = LocalizationGetter.GetString("CloseCaseUp");
    if ((investigationstatus == 4) || (investigationstatus == 6))
    {
      Res_or_comp = "";
    }
    if ((investigationstatus == 9) && (_user.role_id == 4 || _user.role_id == 5))
    {
      Res_or_comp = LocalizationGetter.GetString("Reopen");
      normal_button_value = ((int)CaseStatusConstants.CaseStatusValues.Investigation).ToString();
    }
    if (((rm._investigation_status == (int)CaseStatusConstants.CaseStatusValues.Completed || rm._investigation_status == (int)CaseStatusConstants.CaseStatusValues.Resolution)))
    {
      Res_or_comp = LocalizationGetter.GetString("Awaitingapproval");
    }
  }
}
<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link rel="stylesheet" href="~/Content/newCase.css" />
    <title>@ViewBag.Title</title>
    <script type="text/javascript" src="~/Scripts/lib/jquery-1.10.2.min.js"></script>
    <script type="text/javascript" src="~/Scripts/lib/jquery-ui.min.js"></script>
    <script src="~/Scripts/View/reportSummary.js"></script>

    <script src="~/Libs/angular/angular.min.js"></script>
    <script src="~/Libs/angular-http/angular-http.js"></script>
    <script src="~/Libs/angular-resource/angular-resource.min.js"></script>
    <script src="~/Libs/angular-animate/angular-animate.min.js"></script>
    <script src="~/Libs/angular-sanitize/angular-sanitize.min.js"></script>
    <script src="~/Libs/angular-nvd3/dist/angular-nvd3.min.js"></script>
    <script src="~/Libs/ng-file-upload/ng-file-upload.min.js"></script>
    <script type="text/javascript" src="~/Libs/angular-ui-calendar/src/calendar.js"></script>

    <script src="~/Scripts/dis.min.js?version=@System.Configuration.ConfigurationManager.AppSettings["versionDisJS"]"></script>

    <!-- Modal popUp http://jquerymodal.com/ -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.css" />
    <!-- Custom dropDown selicts http://selectric.js.org/ -->
    <script src="~/libs/Selectric/jquery.selectric.min.js"></script>
    <link rel="stylesheet" href="~/libs/Selectric/selectric.css">
</head>
<body ng-app="EC">
    <input type="hidden" id="_report_id" value="@Html.Raw(_report_id)" />
    <input type="hidden" id="user_id" value="@Html.Raw(user_id)" />
    @if (investigationstatus == 9)
    {
        @Html.Partial("~/Views/Shared/EditorTemplates/ReOpenModalNew.cshtml", new ViewDataDictionary {
                               { "normal_button_promotion", normal_button_promotion },
                               { "Res_or_comp", Res_or_comp },
                               { "overlay_title", overlay_title },
                               { "textbox_title", textbox_title },
                               { "investigationstatus", investigationstatus },
                               { "left_button_promotion", left_button_promotion },
                               { "normal_button_value", normal_button_value },
                               { "left_button_value", left_button_value },
                               { "company_outcomes", company_outcomes },
                               { "report_id", ViewBag.report_id },
                               { "is_cc", is_cc }
                        })
    }
    else if (((rm._investigation_status == (int)CaseStatusConstants.CaseStatusValues.Completed || rm._investigation_status == (int)CaseStatusConstants.CaseStatusValues.Resolution)))
    {
        @Html.Partial("~/Views/Shared/EditorTemplates/AwaitingApprovalModalNew.cshtml", new ViewDataDictionary {
                               { "normal_button_promotion", normal_button_promotion },
                               { "Res_or_comp", Res_or_comp },
                               { "overlay_title", overlay_title },
                               { "textbox_title", textbox_title },
                               { "investigationstatus", investigationstatus },
                               { "left_button_promotion", left_button_promotion },
                               { "normal_button_value", normal_button_value },
                               { "left_button_value", left_button_value },
                               { "company_outcomes", company_outcomes },
                               { "report_id", ViewBag.report_id },
                               { "is_cc", is_cc },
                               { "user_id", user_id}
                        })
        @Html.Partial("~/Views/Shared/EditorTemplates/ApproveDialogModalNew.cshtml", new ViewDataDictionary { })
    }
    else
    {
        @Html.Partial("~/Views/Shared/EditorTemplates/CreateTaskModalNew.cshtml", new ViewDataDictionary {
                               { "normal_button_promotion", normal_button_promotion },
                               { "Res_or_comp", Res_or_comp },
                               { "overlay_title", overlay_title },
                               { "textbox_title", textbox_title },
                               { "investigationstatus", investigationstatus },
                               { "left_button_promotion", left_button_promotion },
                               { "normal_button_value", normal_button_value },
                               { "left_button_value", left_button_value },
                               { "company_outcomes", company_outcomes },
                               { "report_id", ViewBag.report_id },
                               { "is_cc", is_cc },
                               { "user_id", user_id}
                        })
    }
    <header class="header">
        @{
            string mainURL = Request.Url.AbsoluteUri.ToLower();
            string _menuAnalytics = "", _menuTasks = "", _menuMessages = "", _menuCases = "";
            if ((mainURL.Contains("tasks")) || (mainURL.Contains("task/")))
            {
                if ((!mainURL.Contains("analytics")) && (!mainURL.Contains("/NewCase/")))
                {
                    _menuTasks = "active";
                }
            }

            if ((mainURL.Contains("cases")) || (mainURL.Contains("newreport/")) || (mainURL.Contains("NewCase/")))
            {
                _menuCases = "active";
            }

            if (mainURL.Contains("analytics"))
            {
                _menuAnalytics = "active";
            }
            if (mainURL.Contains("messages") && !mainURL.Contains("NewCase/messages/"))
            {
                _menuMessages = "active";
            }
        }
        <div class="container clearfix">
            <div class="header__leftBlock">
                <div class="headerTop-logo">
                    <a href="#" class="headerTop-logo__link">
                        <div class="headerTop-logo__img"></div>
                    </a>
                </div>
                <ul class="mainNavigation">
                    <li class="navConteiner @_menuAnalytics">
                        <a href="/analytics/Index" class="navConteiner__a ">
                            <span class="navConteiner__icon navConteiner__icon_analytics"></span>
                            <span class="navConteiner__name">Analytics</span>

                        </a>
                    </li><!-- /.navConteiner -->
                    <li class="navConteiner @_menuTasks">
                        <a href="/tasks/Index" class="navConteiner__a navConteiner__badgeCount_enable" >
                            <span class="navConteiner__icon navConteiner__icon_tasks"></span>
                            <span class="navConteiner__name">Tasks</span>
                            @if (unread_task_number_string.Length > 0)
                            {<span class="navConteiner__badgeCount ">@unread_task_number_string</span>}
                        </a>
                    </li><!-- /.navConteiner -->
                    <li class="navConteiner @_menuMessages">
                        <a href="/messages/Index" class="navConteiner__a navConteiner__badgeCount_enable">
                            <span class="navConteiner__icon navConteiner__icon_messages"></span>
                            <span class="navConteiner__name">Messages</span>
                            @if (unread_message_number_string.Length > 0)
                            { <span class="navConteiner__badgeCount ">@unread_message_number_string</span> }
                        </a>
                    </li><!-- /.navConteiner -->
                    <li class="navConteiner @_menuCases">
                        <a href="/cases/Index" class="navConteiner__a navConteiner__badgeCount_enable">
                            <span class="navConteiner__icon navConteiner__icon_dashboard"></span>
                            <span class="navConteiner__name">Dashboard</span>
                            @if (unread_report_number_string.Length > 0)
                            {<span class="navConteiner__badgeCount ">@unread_report_number_string</span>}
                        </a>
                    </li>
                </ul>
            </div>
            <div class="header__rightBlock">
                <div class="userNavigation">
                    <a href="#" class="userNavigation__a">
                        <div class="userNavigation__info">
                            @*
                                <div class="userNavigation__name">@(um._user != null ? um._user.first_nm : "")</div>
                                <div class="userNavigation__surname">@(um._user != null ? um._user.last_nm : "")</div>
                            *@
                            @if (_user!= null)
                            {
                                var logo = cm.getLogoCompany(_user.company_id);
                                if (!String.IsNullOrEmpty(logo))
                                {
                                    <img src="@Url.Content(cm.getLogoCompany(_user.company_id))" style="max-height: 44px;" alt="CompanyLogo" />
                                }
                            }
                        </div>
                        <div class="userNavigation__logo">
                            @if ((um._user != null) && (um._user.photo_path.Trim() != ""))
                            {
                                <img src="@Url.Content(um._user.photo_path.Trim())" alt="UserLogo" />
                            }
                            else
                            {
                                <img src="@Url.Content("/Content/Icons/anonimousReporterIcon.png")" alt="UserLogo" />
                            }
                        </div>
                        <div class="userNavigation__triangle"></div>
                    </a>
                    <ul class="dropDown-navigation">
                        <li class="dropDown-navigation__li"><a href="/settings/index/" class="dropDown-navigation__a">@LocalizationGetter.GetString("Settings")</a></li>
                        <li class="dropDown-navigation__li">
                            <a href="/EmployeeAwareness/" class="dropDown-navigation__a">
                                Posters
                            </a>
                        </li>
                      <li class="dropDown-navigation__li">
                        <a href="/Trainer/Calendar" class="dropDown-navigation__a">
                          Book Training
                        </a>
                      </li>
                      @if (cm.AllPayments().Count > 0)
                      {
                        <li class="dropDown-navigation__li">
                          <a href="/Payment/History" class="dropDown-navigation__a">
                            Subscription
                          </a>
                        </li>
                      }
                        <li class="dropDown-navigation__li active">
                            <a href="/settings/password/" class="dropDown-navigation__a">
                                @LocalizationGetter.GetString("Password")
                            </a>
                        </li>
                        @*<li class="dropDown-navigation__li">
                                <a href="/Payment/History" class="dropDown-navigation__a">
                                    @LocalizationGetter.GetString("Subscription")
                                </a>
                            </li>*@
                        <li class="dropDown-navigation__li">
                            <form id="logout_form" action="@Url.Action("Logout", "Base")">
                                <a href="javascript:{}" onclick="document.getElementById('logout_form').submit();" class="dropDown-navigation__a">
                                    @LocalizationGetter.GetString("Logout2")
                                </a>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </header>
    @{
        string hrefURL = Request.Url.AbsoluteUri.ToLower();
        if (hrefURL.Contains("/settings"))
        {
            hrefURL = "/settings/index";
            page_subtitle = LocalizationGetter.GetString("Settings");
        }
        if ((hrefURL.Contains("/tasks")))
        {
            if (!mainURL.Contains("analytics"))
            {
                hrefURL = "/tasks/index";
                page_subtitle = LocalizationGetter.GetString("Tasks");
            }
        }
        if (hrefURL.Contains("/cases"))
        {
            hrefURL = "/cases/index";
            page_subtitle = LocalizationGetter.GetString("Dashboard");
        }

        if ((hrefURL.Contains("NewCase/")) || (hrefURL.Contains("/cases")) || (hrefURL.Contains("/newreport") || (hrefURL.Contains("NewCase/task/"))))
        {
            hrefURL = "/cases/index";
            page_subtitle = LocalizationGetter.GetString("Cases");
        }

        if (hrefURL.Contains("/analytics"))
        {
            hrefURL = "/analytics/index";
            page_subtitle = LocalizationGetter.GetString("Analytics");
        }

        if (hrefURL.Contains("/messages"))
        {
            hrefURL = "/messages/index";
            page_subtitle = LocalizationGetter.GetString("Messages");
        }

        if (hrefURL.Contains("/payment"))
        {
            hrefURL = "/Payment/History";
            page_subtitle = LocalizationGetter.GetString("Payments");
        }
    }
    <div class="container clearfix">
        <div class="breadcrumbs clearfix">
            <div class="breadcrumbs-info clearfix">
                <a href="@hrefURL" class="breadcrumbs-info__tree-links">@page_subtitle</a>
                <span class="breadcrumbs-info__links-arrow"></span>
                <div class="breadcrumbs-info__current-page">
                    <span class="breadcrumbs-info__current-page-status"></span>
                    <div class="breadcrumbs-info__current-page-text">@(Request.Url.AbsoluteUri.ToLower().Contains("newreport") ? report_name_code : report_name)</div>
                </div>
                @*
                    <a href="#" class="btn-link acceptCaseBtn">@Res_or_comp</a>
                *@

                @if ((rm.MediatorsWhoHasAccessToReport().Select(t => t.id).ToList().Contains(_user.id)))
                {


                    if (Res_or_comp == LocalizationGetter.GetString("Awaitingapproval") && (_user.role_id == ECLevelConstants.level_supervising_mediator || ((soff != null) && (soff.id == _user.id))))
                    {
                        <a href="#approveDialog" rel="modal:open" id="return_investigation" style="margin-right: 30px;" class="btn-link" value="@normal_button_value">RETURN FOR INVESTIGATION</a>
                        <a href="#approveDialog" rel="modal:open" id="approve_close" class="btn-link" value="@normal_button_value">APPROVE</a>
                    }
                    else if (_user.role_id == ECLevelConstants.level_supervising_mediator || is_owner)
                    {
                        if ((investigationstatus == 9) && (_user.role_id == 4 || _user.role_id == 5))
                        {
                            <a href="#openModal" class="btn-link" rel="modal:open" disabled>@Res_or_comp</a>
                        }
                        else
                        {
                            <a href="#" class="btn-link" onclick="closeCaseModal()" disabled>@Res_or_comp</a>
                        }
                    }
                }
                else
                {
                    <div id="resoveCompletedTopmessage" style="float: none; display: inline-block; vertical-align: middle; padding: 2px 13px 2px 13px; position: absolute;">
                        <div class="buttonNoneBorderGray" style="background-color: #e5ebeb; color: #abb9bb;">
                            <div class="textInButton" style="font-family: 'OpenSans-Bold', arial, verdana, sans-serif; font-size: 14px; text-transform: uppercase; padding: 10px;">
                                @Res_or_comp
                            </div>
                        </div>
                    </div>

                }
            </div>
            <ul class="breadcrumbs-mediators">
                @foreach (var user in rm.MediatorsWhoHasAccessToReport())
                {
                    var owner = rm.ReportOwners().FirstOrDefault(x => x.report_id == _report_id && x.user_id == user.id && x.status_id == 2) != null;
                    <li class="breadcrumbs-mediators__li">
                        <a href="#" class="breadcrumbs-mediators__a">
                            <img src="@(user.photo_path.Trim() != "" ? Url.Content(user.photo_path.Trim()) : Url.Content("~/Content/Icons/noPhoto.png"))" alt="" class="breadcrumbs-mediators__img" />
                            @if (owner)
                            {
                                <span class="profile-status online"></span>
                            }
                            else if ((soff != null) && (soff.id == user.id))
                            {
                                <span class="profile-status offline"></span>
                            }
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>
    
    @RenderBody()
    @Html.Partial("~/Views/Shared/HelpPartial.cshtml", new ViewDataDictionary { { "is_reporter", false } })
    <script src="~/Scripts/View/Settings.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            //var button = $(".acceptCaseBtn.resolveCase");
            var textareaPopup = $('textarea#txtResolve');

            function overlay() {
                el = document.getElementById("anotherDialog");
                el.style.visibility = (el.style.visibility == "visible") ? "hidden" : "visible";
            }


            var textareaNewPopup = $('textarea#txtEscalate');

            function overlay_approve() {
                el = document.getElementById("approveDialog");
                el.style.visibility = (el.style.visibility == "visible") ? "hidden" : "visible";
            }

            function startClick(){
                $('.logButtonModal').click(
                    function(){
                        if(textareaPopup[0].value==""){
                            textareaPopup.css({'border-color':'red', 'box-shadow':'red'});
                        }
                        else{
                            //  console.log('logButtonModal click - _report_id = ' + @_report_id);
                        }
                    }
                );
                $('.repButtonModal').click(
                    function(){
                        if(textareaPopup[0].value==""){
                            textarea.css({'border-color':'red', 'box-shadow':'red'});
                        }
                        else{
                        //    console.log('repButtonModal click - _report_id = ' + @_report_id);
                        }
                    }
                );
            }
            startClick();
        });

        $('.acceptCaseBtn').on('click', function () {
            $('#anotherDialog').show();
        });
    </script>
</body>
</html>
