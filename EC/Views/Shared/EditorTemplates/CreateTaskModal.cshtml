@using EC.Localization;
@using EC.Models;
@using EC.Models.Database;
@using EC.Constants;

@{
  string Res_or_comp = ViewBag.Res_or_comp;
  string overlay_title = ViewBag.overlay_title;
  string textbox_title = ViewBag.textbox_title;
  string normal_button_promotion = ViewBag.normal_button_promotion;
  string normal_button_value = ViewBag.normal_button_value;
  int investigationstatus = (int)ViewBag.investigationstatus;

  string left_button_promotion = ViewBag.left_button_promotion; // @LocalizationGetter.GetString("Returnnvestigation", is_cc).ToUpper()
  string left_button_value = ViewBag.left_button_value;

  GlobalFunctions glb = new GlobalFunctions();
  GetDBEntityModel getDBEntityModel = new GetDBEntityModel();
  List<company_outcome> _all_outcomes = ViewBag.company_outcomes;
  int report_id = ViewBag.report_id;
  if (ViewBag.report_id == null)
  {
    report_id = 0;
  }
  ReportModel rm = new ReportModel(report_id);
  bool? is_cc = ViewBag.is_cc;
  if (!is_cc.HasValue)
  {
    is_cc = false;
  }

  int company_id = rm._report.company_id;
  CompanyModel cm = new CompanyModel(company_id);

}
<div id="anotherDialog">
    <div id="anotherDialog2">
        <div id="dialog-form">
            <div class="modal-header2">
                <div class="resolve">@overlay_title</div>
                <label class="close1"></label>
                <div class="closeIcon" onclick='overlay()'></div>
            </div>
            @if (overlay_title == LocalizationGetter.GetString("ReopenCase", is_cc))
            {
                <div>&nbsp;</div>
                <div>@LocalizationGetter.GetString("AddReasonWhy", is_cc)</div>
                <div class="caseResolution">
                    <textarea class="form-control" type="text" name="txtDescription" id="txtDescription"></textarea>
                </div>
            }
            @if (((normal_button_value == ECGlobalConstants.investigation_status_completed.ToString())))
            {
                <div class="caseResolution custom">
                    <div class="outcomeText">@LocalizationGetter.GetString("SelectCaseReviewerToSignoff", is_cc):</div>
                    <div class="dropdown3">
                        <label id="ddlSignOffMediator" data-value="">@LocalizationGetter.GetString("Selectanoption", is_cc)</label><span class="arrow-down"></span>
                        <ul>
                            @foreach (user _user in cm.AllMediators(company_id, true, null).Where(t => (t.user_permissions_approve_case_closure.HasValue && t.user_permissions_approve_case_closure.Value == 1) || t.role_id == 5).ToList())
                            {
                                <li data-value=@_user.id>@_user.first_nm @_user.last_nm</li>
                            }
                        </ul>
                    </div>
                </div>
                <div>&nbsp;</div>

                <div class="caseResolution custom">
                    <div class="outcomeText">@LocalizationGetter.GetString("ReasonForCaseClosure_noDate", is_cc):</div>
                    <div class="dropdown3">
                        <label id="ddlReasonClosure" data-value="">@LocalizationGetter.GetString("Selectanoption", is_cc)...</label><span class="arrow-down"></span>
                        <ul>
                            @foreach (case_closure_reason _reason in getDBEntityModel.GetCaseClosureReasonsWithStatus(is_cc.Value))
                            {
                                <li data-value=@_reason.id>@_reason.case_closure_reason_en</li>
                            }
                        </ul>
                    </div>
                </div>
                <div>&nbsp;</div>
            }
            <div class="modal-footer2">
                @if (normal_button_promotion.Length > 0)
                {
                    @*<button type="submit" class="btn btn-sm btn-success" id="resolve_btn" value=@normal_button_value>@normal_button_promotion.ToUpper()</button>*@
                    <button type="submit" id="resolve_btn" class="btn btn-sm btn-success" value=@normal_button_value>@normal_button_promotion.ToUpper()</button>
                }
                @if (left_button_promotion.Length > 0)
                {
                    <button type="submit" class="btn btn-sm btn-white" id="not_resolve_btn" value=@left_button_value>@left_button_promotion.ToUpper()</button>
                }
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/View/customSelectModalIndexCase.js"></script>